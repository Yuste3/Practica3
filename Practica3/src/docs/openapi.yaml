openapi: 3.0.0
info:
  title: Coforge Aplication
  description: |
    Coforge Aplication
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Employees
    description: Operations about Employees
  - name: Practices
    description: Operations about Practices
  - name: Projects
    description: Operations about Projects
  - name: Assignments
    description: Operations about Assignments
paths:
  /api/employees:
    post:
      tags:
        - Employees
      description: |
        Add an employee to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Employee added successfully
        '400':
          description: Failed to insert an employee
    get:
      tags:
        - Employees
      description: |
        Get all employees in the system.
      responses:
        default:
          description: Unexpected error
        '200':
          description: Employees retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDTO'
        '500':
          description: Internal server error
  /api/employees/{code}:
    get:
      tags:
        - Employees
      description: |
        Get information about a specified employee by employee code.
      parameters:
        - name: code
          in: path
          description: Employee code to be queried
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Unexpected error
        '200':
          description: Employee found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDTO'
        '404':
          description: Employee not found
    put:
      tags:
        - Employees
      description: |
        Update data of an employee in the system.
      parameters:
        - name: code
          in: path
          description: Employee code to be updated
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UEmployeeDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Employee updated successfully
        '400':
          description: Error updating the employee
        '404':
          description: Employee not found
    delete:
      tags:
        - Employees
      description: |
        Delete an employee from the system by employee code.
      parameters:
        - name: code
          in: path
          description: Employee code to be deleted
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Unexpected error
        '204':
          description: Employee deleted successfully
        '404':
          description: Employee not found

  /api/practices:
    post:
      tags:
        - Practices
      description: |
        Add a new practice in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PracticeDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Practice added successfully
        '400':
          description: Error adding the practice
    get:
      tags:
        - Practices
      description: |
        Get all existing practices in the system.
      responses:
        default:
          description: Unexpected error
        '200':
          description: Practices retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PracticeDTO'
        '500':
          description: Internal server error
  /api/practices/{code}:
    get:
      tags:
        - Practices
      description: |
        Get information about a practice.
      parameters:
        - name: code
          in: path
          description: Practice code to be searched
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
        '200':
          description: Practice found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PracticeDTO'
        '404':
          description: Practice not found
    put:
      tags:
        - Practices
      description: |
        Update an existing practice in the system.
      parameters:
        - name: code
          in: path
          description: Practice name to be updated
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UPracticeDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Practice updated successfully
        '400':
          description: Error updating the project
        '404':
          description: Project not found
    delete:
      tags:
        - Practices
      description: |
        Delete an existing practice from the system.
      parameters:
        - name: code
          in: path
          description: Practice name to be deleted
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
        '204':
          description: Practice deleted successfully
        '404':
          description: Practice not found

  /api/projects:
    post:
      tags:
        - Projects
      description: |
        Add a new project in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Project added successfully
        '400':
          description: Error adding the project
    get:
      tags:
        - Projects
      description: |
        Get all existing projects in the system.
      responses:
        default:
          description: Unexpected error
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        '500':
          description: Internal server error
  /api/projects/{code}:
    get:
      tags:
        - Projects
      description: |
        Get information about a project specified by project code.
      parameters:
        - name: code
          in: path
          description: Project code to be searched
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
        '200':
          description: Project found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        '404':
          description: Project not found
    put:
      tags:
        - Projects
      description: |
        Update an existing project in the system.
      parameters:
        - name: code
          in: path
          description: Project code to be updated
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UProjectDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Project updated successfully
        '400':
          description: Error updating the project
        '404':
          description: Project not found
    delete:
      tags:
        - Projects
      description: |
        Delete an existing project from the system.
      parameters:
        - name: code
          in: path
          description: Project code to be deleted
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
        '204':
          description: Project deleted successfully
        '404':
          description: Project not found

  /api/assignments:
    post:
      tags:
        - Assignments
      description: |
        Add a new assignment in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Assignment inserted successfully
        '400':
          description: Error inserting the assignment
    get:
      tags:
        - Assignments
      description: |
        Get all assignments in the system.
      responses:
        default:
          description: Unexpected error
        '200':
          description: Assignments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
        '500':
          description: Internal server error
  /api/assignments/{code}:
    get:
      tags:
        - Assignments
      description: |
        Get information about an assignment of a specific employee by their code.
      parameters:
        - name: code
          in: path
          description: Employee code whose assignment is to be displayed
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Unexpected error
        '200':
          description: Assignment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        '404':
          description: Assignment not found
    put:
      tags:
        - Assignments
      description: |
        Update an assignment by employee code.
      parameters:
        - name: code
          in: path
          description: Employee code whose assignment is to be updated
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentDTO'
      responses:
        default:
          description: Unexpected error
        '204':
          description: Assignment updated successfully
        '400':
          description: Error updating the assignment
        '404':
          description: Assignment not found
    delete:
      tags:
        - Assignments
      description: |
        Delete an existing assignment from the system by employee code.
      parameters:
        - name: code
          in: path
          description: Employee code whose assignment is to be deleted
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Unexpected error
        '204':
          description: Assignment deleted successfully
        '404':
          description: Assignment not found

components:
  schemas:
    PracticeDTO:
      type: object
      properties:
        code:
          type: string
      required:
        - code
    ProjectDTO:
      type: object
      properties:
        code:
          type: string
      required:
        - code
    AssignmentDTO:
      type: object
      properties:
        employeeCode:
          type: integer
        supervisorCode:
          type: integer
        assignmentInfo:
          properties:
            remark:
              type: string
            percentage:
              type: string
            startDate:
              type: string
            endDate:
              type: string
        project:
          properties:
            oldCode:
              type: string
            newCode:
              type: string
        practiceName:
          type: string
      required:
        - name
    EmployeeDTO:
      type: object
      properties:
        code:
          type: integer
        name:
          type: string
        role:
          type: string
        practice:
          type: string
      required:
        - code
        - name
        - role
    UEmployeeDTO:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        practice:
          type: string
    UPracticeDTO:
      type: object
      properties:
        newCode:
          type: string
    UProjectDTO:
      type: object
      properties:
        newCode:
          type: string
    Assignment:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/EmployeeDTO'
        supervisor:
          properties:
            code:
              type: integer
            name:
              type: string
        practiceName:
          type: string
        project:
          properties:
            oldCode:
              type: string
            newCode:
              type: string
        assignmentInfo:
          properties:
            code:
              type: integer
            remark:
              type: string
            percentage:
              type: string
            startDate:
              type: string
            endDate:
              type: string


















